# -*- coding: utf-8 -*-
"""Python_L10.ipynb"

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wTJDIdiUBxd98BySJzm_rfQCjRQkpvmc
"""

from google.colab import drive
drive.mount('/content/gdrive')

import pandas as pd
df=pd.read_csv('/content/gdrive/MyDrive/spotify-2023_fixed.csv')

import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

df.head() # Вывел на экран список spotify из ДЗ

plt.figure(figsize=(15, 15))
sns.displot(data=df, x='in_spotify_playlists', y='valence_%')
title_dict={'fontsize': 16, 'fontweight': 'bold', 'color': '#800000'}
lable_dict={'fontsize': 14, 'color': '#800000'}
plt.title("Валентность песни в плейлистах Sportify",
          fontdict=title_dict)
plt.xlabel("in_spotify_playlists", fontdict=lable_dict)
plt.ylabel("valence_%", fontdict=lable_dict)

# График зависимости обращений в чартах spotify и apple от количества артистов

title_dict={'fontsize': 16, 'fontweight': 'bold', 'color': '#800000'}
lable_dict={'fontsize': 14, 'color': '#800000'}
plt.title("Зависимости в чартах spotify и apple от количества артистов",
          fontdict=title_dict)
plt.xlabel("in_apple_playlists", fontdict=lable_dict)
plt.ylabel("in_spotify_charts", fontdict=lable_dict)
sns.set_theme(style="darkgrid")
sns.lineplot(x="in_apple_playlists",
             y="in_spotify_charts",
             hue="artist_count",
             data=df)
plt.show()

# График зависимости танцевальности от месяца релиза произведения
plt.figure(figsize=(15, 10))
sns.scatterplot(data=df, x='danceability_%', y='released_month')
title_dict={'fontsize': 16, 'fontweight': 'bold', 'color': '#800000'}
lable_dict={'fontsize': 14, 'color': '#800000'}
plt.title("Зависимости танцевальности от месяца релиза произведения",
          fontdict=title_dict)
plt.xlabel("Акустика песни", fontdict=lable_dict)
plt.ylabel("Значение", fontdict=lable_dict)
plt.show()

# График зависимости энергетики от кол-ва скорости ударов в минуту
plt.figure(figsize=(15, 6))
title_dict={'fontsize': 16, 'fontweight': 'bold', 'color': '#800000'}
lable_dict={'fontsize': 14, 'color': '#800000'}
plt.title("Зависимость энергетики от темпа (скорости ударов в минуту)",
          fontdict=title_dict)
plt.xlabel("energy_%", fontdict=lable_dict)
plt.ylabel("bpm", fontdict=lable_dict)
sns.lineplot(data=df, x="energy_%", y="bpm")
plt.show()

# График зависимости тональностей
#(мажорной или минорной) произведения по году и месяцу релиза
plt.figure(figsize=(10, 10))
title_dict={'fontsize': 16, 'fontweight': 'bold', 'color': '#800000'}
lable_dict={'fontsize': 14, 'color': '#800000'}
plt.title("Зависимость тональности по году и месяцу релиза",
          fontdict=title_dict)
sns.scatterplot(data=df, x='released_day', y='released_year', hue='mode')
plt.xlabel("released_day", fontdict=lable_dict)
plt.ylabel("released_year", fontdict=lable_dict)
plt.show()

# вывели на экран данные из файла spotify, у которых год релиза произведения
# раньше 2010 года
df[df['released_year']<2010]

# вывели на экран индексы данных из файла spotify, у которых год релиза
# произведения раньше 2010 года
df[df['released_year']<2010].index

# удалили данные из списка spotify, у которых год релиза произведения
# раньше 2010 года
df.drop(index=df[df['released_year']<2010].index)

# построили график зависимостей мажорных и минорных произведений в зависимости
# от года и месяца выпуска вывели на экран данные из файла spotify, в который
# год релиза произведения раньше 2010 года
sns.scatterplot(data=df.drop(index=df[df['released_year'] <2010].index),
                x='released_day',
                y='released_year',
                hue='mode',
                palette='rocket_r'                )
title_dict={'fontsize': 18, 'fontweight': 'bold', 'color': '#800000'}
lable_dict={'fontsize': 14, 'color': '#800000'}
plt.title("Зависимость тональности по году и месяцу релиза",
          fontdict=title_dict)
plt.xlabel("released_day", fontdict=lable_dict)
plt.ylabel("released_year", fontdict=lable_dict)
plt.show()

#уникальность по столбцам таблицы
df.nunique()

# уникальность в столбце "mode" - тональность
df['mode'].unique()

# уникальность присутствия текста в произведении
df['speechiness_%'].unique()

# количество уникальных элементов списка в столбце тональность
len(df['mode'].unique())

# Разделим исполнителей  на 2 категории: солист/ка и группа
df.loc[df['artist_count'] == 1, 'artist_quantity'] = 'singer'
df.loc[df['artist_count'] > 1, 'artist_quantity'] = 'band'

sns.histplot(data=df, x="acousticness_%", hue="artist_quantity")

title_dict={'fontsize': 16, 'fontweight': 'bold', 'color': '#800000'}
lable_dict={'fontsize': 12, 'color': '#800000'}
plt.title("Акустические параметры в зависимости от количества исполнителей",
          fontdict=title_dict)
plt.xlabel("Акустика песни", fontdict=lable_dict)
plt.ylabel("Значение", fontdict=lable_dict)

plt.show()